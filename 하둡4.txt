사용자가 직접 카운트jar 를 사용할수있도록 해보자
-------------

● 보조정렬(Secondary Sort)은 키의 값들을 그룹핑하고 그룹핑된 레코드에 순서를 부여하는 방식
● 보조정렬 구현순서
	a. 기존 키의 값들을 조합한 복합키(Composite Key)를 정의, 이 때 키의 값 중에서 어떤 키를 그룹핑 키로 사용할 지 결정
	- 그룹핑 키 : 기준 키
	b. 복합키의 레코드를 정렬하기 위한 비교기(Comparator)를 정의
	c. 그룹핑 키를 파티셔닝할 파티셔너(Partitioner)를 정의
	d. 그룹핑 키를 정렬하기 위한 비교기(Comparator)를 정의
6. Reducer 구현
	a. 리듀서에는 그룹핑 파티셔너와 그룹핑 comparator에 의해 같은 연도로 그룹핑된 데이터가 전달된 상태
	: 하둡의 맵리스가 해줌
	b. 복합키 comparator로 인해 그룹핑된 값은 월의 순서대로 오름차순으로 정렬되어 있음
	c. 하지만 리듀서 메서드에서 지연 횟수를 합산할 경우 데이터에 오류가 발생
	d. 예를 들어, 2008년도 항공 출발 지연 데이터를 처리할 경우 다음과 같은 결과가 나타남
		2008 12 2647363
	e. 2008년도 12월만 출력되고 지연 횟수도 2008년도의 모든  지연 횟수가 합산되어 출력됨
	f. 이러한 현상이 나타나는 이유는 리듀서는 2008년 이라는 그룹키를 기준으로 연산을 수행하기 때문
	g. 월별로 지연 횟수를 계산하려면 복합키를 구분해서 처리하는 코드를 구현해야 함
	h. 입력 데이터의 값에 해당하는 Iterable 객체를 순회할 때 월에 해당하는 값을 bMonth 라는 변수에 백업
	i. 순회를 하면서 백업된 월과 현재 데이터의 월이 일치하지 않을 때는 리듀서의 출력 데이터에 백업된 월의 지연 횟수를 출력
	j. 이 때, 다음 순서에 있는 월의 지연 횟수를 합산할 수 있게 지연 횟수 합계 변수를 0으로 초기화
---------------

자료구조
1. array
2. linked-list
3. map = {key : memory address}
 - 다른 key ,다른 주소
 - 지정한 바운더리바깥으로나가면안댐
 - 속도 빠르다
